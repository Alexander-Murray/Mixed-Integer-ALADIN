function [x_opt,kappa_opt,status] = MI_AL_MINLP(minlp,nlp,x_opt,pNum,lbx,ubx,discrete,Nloc_cons,MINLP_solver)
    sol = minlp('x0' , x_opt,...
                  'p',   pNum,...
                  'lbx', lbx,...
                  'ubx', ubx,...
                  'lbg', -inf*ones(Nloc_cons,1), ...
                  'ubg', zeros(Nloc_cons,1));
    status = minlp.stats.return_status;
    
    if strcmp(MINLP_solver,'ipopt')
        x_opt     = full(sol.x);
        kappa_opt = full(sol.lam_g);
    else
        %re-solve with fixed integer vars to obtain kappas
        relbx=lbx;
        reubx=ubx;
        relbx(find(discrete))=full(sol.x(find(discrete)));
        reubx(find(discrete))=full(sol.x(find(discrete)));

        resol= nlp('x0' , full(sol.x).',...
                  'p',   pNum,...
                  'lbx', relbx,...
                  'ubx', reubx,...
                  'lbg', -inf*ones(Nloc_cons,1), ...
                  'ubg', zeros(Nloc_cons,1));

        %Store local solutions
        x_opt     = full(sol.x);
        kappa_opt = full(resol.lam_g);
    end

end